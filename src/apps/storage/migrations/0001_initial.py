# -*- coding: utf-8 -*-
# Generated by Django 1.9.7 on 2016-06-12 16:59
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invoice_date', models.DateTimeField(verbose_name='Время поступления')),
                ('overhead', models.DecimalField(decimal_places=2, max_digits=7, verbose_name='Накладные расходы')),
            ],
            options={
                'db_table': 'storage_invoice',
                'verbose_name': 'Накладная',
                'verbose_name_plural': 'Накладые',
                'ordering': ['invoice_date'],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_name', models.CharField(db_index=True, max_length=100, unique=True, verbose_name='Наименование')),
                ('product_image', models.ImageField(blank=True, upload_to='storage/products', verbose_name='Картинка')),
                ('cost_price', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='Себестоимость')),
                ('price_retail', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='Розница')),
                ('price_discount', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='Дисконт')),
                ('price_wholesale', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='Оптом')),
            ],
            options={
                'db_table': 'storage_product',
                'verbose_name': 'Товар',
                'verbose_name_plural': 'Товары',
                'ordering': ['product_name'],
            },
        ),
        migrations.CreateModel(
            name='ProductCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_name', models.CharField(db_index=True, max_length=15, unique=True, verbose_name='Категория товара')),
            ],
            options={
                'db_table': 'storage_product_category',
                'verbose_name': 'Категория товара',
                'verbose_name_plural': 'Категории товаров',
                'ordering': ['category_name'],
            },
        ),
        migrations.CreateModel(
            name='ProductKind',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kind_name', models.CharField(max_length=30, verbose_name='Вид товара')),
            ],
            options={
                'db_table': 'storage_product_kind',
                'verbose_name': 'Вид товара',
                'verbose_name_plural': 'Виды товаров',
                'ordering': ['kind_name'],
            },
        ),
        migrations.CreateModel(
            name='ProductProvider',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('provider_name', models.CharField(max_length=30, verbose_name='Поставщик товара')),
                ('description', models.CharField(max_length=200, verbose_name='Краткое описание')),
            ],
            options={
                'db_table': 'storage_product_provider',
                'verbose_name': 'Поставщик товара',
                'verbose_name_plural': 'Поставщики товара',
                'ordering': ['provider_name'],
            },
        ),
        migrations.CreateModel(
            name='ProductStorage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_count', models.IntegerField(verbose_name='Количество')),
                ('min_count', models.IntegerField(verbose_name='Минимальное количество')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='product_storage', to='storage.Product', verbose_name='Товар')),
            ],
            options={
                'db_table': 'storage_product_storage',
                'verbose_name': 'Склад',
                'verbose_name_plural': 'Склад',
            },
        ),
        migrations.CreateModel(
            name='Shipment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cost_price', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='Себестоимость')),
                ('product_count', models.IntegerField(verbose_name='Количество')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='storage.Product', verbose_name='Товар')),
            ],
            options={
                'db_table': 'storage_shipment',
                'verbose_name': 'Партия товара',
                'verbose_name_plural': 'Партии товаров',
            },
        ),
        migrations.AddField(
            model_name='product',
            name='product_category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='storage.ProductCategory', verbose_name='Категория товара'),
        ),
        migrations.AddField(
            model_name='product',
            name='product_kind',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='storage.ProductKind', verbose_name='Вид товара'),
        ),
        migrations.AddField(
            model_name='invoice',
            name='product_provider',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='storage.ProductProvider', verbose_name='Поставщик'),
        ),
        migrations.AddField(
            model_name='invoice',
            name='shipments',
            field=models.ManyToManyField(related_name='invoices', to='storage.Shipment', verbose_name='Товары'),
        ),
    ]
